"""
?นิพจน์คืออะไร
    *นิพจน์ (Expression) คือ การนำอาโอเปอเรเตอร์ และโอเปอแรนด์หลายๆ ตัวมารวมเข้าด้วยกันเป็นประโยคเดียว

    *โอเปอเรเตอร์ (Operator) คือ ตัวดำเนินการ ซึ่งมักจะเป็นเครื่องหมายหรือสัญลักษณ์พิเศษ ต่างๆ เช่น +, -, *, /, &, |, >, <, เป็นต้น

    *โอเปอแรนด์ (Operand) คือ ตัวถูกกระทำ อาจจะเป็นค่าคงที่ ตัวแปร นิพจน์ หรือฟังก์ชั่นก็ได้

        ? Operator ภาษา Python
            * Arithmetic Operators ตัวดำเนินการทางคณิตศาสตร์
            * Logical Operators ตัวดำเนินการทางตรรกศาสตร์
            * Bitwise Operators ตัวดำเนินการสำหรับเปรียบเทียบบิตของเลขฐานสอง
            * Assignment Operators ตัวดำเนินการกำหนดค่าให้ตัวแปร
            * Comparison Operators ตัวดำเนินการเปรียบเทียบค่า
            * Identity Operators ตัวดำเนินการประเมินหาค่าความจริงของออบเจ็ดต่าง
            * Membership Operators ตัวดำเนินการในการตรวจสอบการเป็นสมาชิกของในออบเจ็ด
"""

# * ตัวดพเนินการประเภทนี้จะใช้สำหรับตรวจสอบว่านิพจน์มีค่าความจริงเป็น จริง (True) หรือ เท็จ (False)
#    * โดยแบ่งได้เป็น 3 ประเภท ดังนี้
#       * ตัวดพเนินการ and (และ) จะได้ค่าเป็น True เมื่อค่าโอเปอแรนด์  A และ B เป็นจริงทั้งคู่

# *           A                        B                     A                        B
# *        (True)-------(and)-------(True)                (True)-------(and)-------(False)
# *                       |                                              |
# *                       |                                              |
# *                       |                                              |
# *                    (True)                                         (False)
# *               A                        B                      A                        B
# *        (False)-------(and)-------(True)                (False)-------(and)-------(False)
# *                       |                                              |
# *                       |                                              |
# *                       |                                              |
# *                    (False)                                        (False)
# *           A                        B                     A                        B
# *        (True)-------(or)-------(True)                (False)-------(or)-------(False)
# *                       |                                              |
# *                       |                                              |
# *                       |                                              |
# *                    (true)                                         (true)
# *           A                        B                     A                        B
# *        (False)-------(or)-------(True)                (False)-------(or)-------(False)
# *                       |                                              |
# *                       |                                              |
# *                       |                                              |
# *                    (true)                                         (False)


# * << (left shift) หมายถึง การเปลี่ยนบิตไปตามทางซ้ายโดยเติมบิต 0 เข้ามาทางด้านขวา
# * เช่นถ้าเลื่อนบิตออกไปทางซ้าย 2 บิต ก็จะเติมบิต 0 จำนวน 2 บิตเข้ามาทางด้านขวา

# * >> (right shift) หมายถึง การเลื่อนบิตไปทางขวาโดยเติมบิต 0 เข้ามาทางด้านซ้าย
# * เช่น ถัาเลื่อนบิตออกไปทางขวา 2 บิต ก็จะเติมบิต 0 จำนวน 2 บิตเข้ามาทางด้านซ้าย=10
a = 10
b = 2

# * เรียกใช้ฟังก์ชั่น bin()เพื่อแปลงค่าตัวเลขฐานสิบไปเป็นฐานสอง
print("เลข 10 ฐานสิบมีค่าเท่ากับ", bin(a), "ฐานสอง")
print("เลข 2 ฐานสิบมีค่าเท่ากับ", bin(b), "ฐานสอง")
print("a & b  = ", a & b)
print("a | b  = ", a | b)
print("a ^ b  = ", a ^ b)
print("~a = ", ~a)
print("~b = ", ~b)
print("a << b =", a << b)
print("a >> b =", a >> b, "\n")

y = ['red', 'green', 'blue']
z = ['red', 'green', 'blue']
c = a
print(y is c)
print(y is z)
print(y is not c)
print(y is not z)
